
synth-processed.o:     file format elf32-i386-freebsd
synth-processed.o
architecture: i386, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000284  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         000002d0  00000000  00000000  000002b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          03c80438  00000000  00000000  00000588  2**2
                  ALLOC
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l       .data	00000000 fc1
00000004 l       .data	00000000 fc2
00000008 l       .data	00000000 flt_fb
0000000c l       .data	00000000 flt_co
00000010 l       .data	00000000 flt_decay
00000014 l       .data	00000000 sq_mult
00000018 l       .data	00000000 stereo_mod
0000001c l       .data	00000000 main_tune
00000020 l       .data	00000000 oct_semitones
00000024 l       .data	00000000 order
00000028 l       .data	00000000 instr_data
00000130 l       .data	00000000 patterns
000002b0 l       .data	00000000 trigger_points
00000000 l       .bss	00000000 g_buffer
00000000 l       .bss	00000000 bss_order_pos
00000004 l       .bss	00000000 bss_pattern_pos
00000008 l       .bss	00000000 bss_stereo_factor
0000000c l       .bss	00000000 bss_master_out
00000010 l       .bss	00000000 bss_tick_ctr
00000014 l       .bss	00000000 bss_temp1
00000018 l       .bss	00000000 bss_modules
00000438 l       .bss	00000000 bss_work
00000000 l       .text	00000000 module_oscillator
0000003f l       .text	00000000 osc_end
00000040 l       .text	00000000 module_filter
0000009a l       .text	00000000 filter_end
0000009b l       .text	00000000 module_envelope
000000b7 l       .text	00000000 module_envelope.in_decay
000000b5 l       .text	00000000 module_envelope.no_switch
000000bc l       .text	00000000 module_envelope.no_decay
000000bf l       .text	00000000 envelope_end
000000c0 l       .text	00000000 module_delay
000000e4 l       .text	00000000 delay_end
000000f6 l       .text	00000000 setup_loop
00000108 l       .text	00000000 synth_loop
0000011c l       .text	00000000 tracks_loop
000001d5 l       .text	00000000 notick
000001b8 l       .text	00000000 notrig
000001a0 l       .text	00000000 no_alt_instr
000001d0 l       .text	00000000 no_advance
000001da l       .text	00000000 element_loop
000001fa l       .text	00000000 element_loop.ch_left
000001f4 l       .text	00000000 element_loop.mono_only
0000020b l       .text	00000000 no_osc
00000214 l       .text	00000000 no_filter
0000021d l       .text	00000000 no_envelope
00000226 l       .text	00000000 no_delay
00000232 l       .text	00000000 not_master_out
0000024b l       .text	00000000 was_master_out
00000249 l       .text	00000000 no_op
00000242 l       .text	00000000 no_op_mult
00000249 l       .text	00000000 no_op_add
00000247 l       .text	00000000 op_add
0000026f l       .text	00000000 was_master_out.no_newtick
000000e5 g       .text	00000000 synth


Disassembly of section .text:

00000000 <module_oscillator>:
   0:	60                   	pusha  
   1:	d9 e8                	fld1   
   3:	d9 46 10             	flds   0x10(%esi)
   6:	d9 46 0c             	flds   0xc(%esi)
   9:	d8 c2                	fadd   %st(2),%st
   b:	de c9                	fmulp  %st,%st(1)
   d:	d9 05 08 00 00 00    	flds   0x8
			f: R_386_32	.bss
  13:	de c9                	fmulp  %st,%st(1)
  15:	d9 c9                	fxch   %st(1)
  17:	d9 45 00             	flds   0x0(%ebp)
  1a:	d8 c2                	fadd   %st(2),%st
  1c:	d9 f5                	fprem1 
  1e:	d9 5d 00             	fstps  0x0(%ebp)
  21:	d9 46 14             	flds   0x14(%esi)
  24:	de ca                	fmulp  %st,%st(2)
  26:	d9 45 04             	flds   0x4(%ebp)
  29:	d8 c2                	fadd   %st(2),%st
  2b:	d9 f5                	fprem1 
  2d:	d9 55 04             	fsts   0x4(%ebp)
  30:	d9 45 00             	flds   0x0(%ebp)
  33:	de c1                	faddp  %st,%st(1)
  35:	d9 ca                	fxch   %st(2)
  37:	dd d8                	fstp   %st(0)
  39:	dd d8                	fstp   %st(0)
  3b:	d8 4e 08             	fmuls  0x8(%esi)
  3e:	61                   	popa   

0000003f <osc_end>:
  3f:	c3                   	ret    

00000040 <module_filter>:
  40:	d9 46 10             	flds   0x10(%esi)
  43:	d9 46 0c             	flds   0xc(%esi)
  46:	d8 0d 00 00 00 00    	fmuls  0x0
			48: R_386_32	.data
  4c:	d8 25 04 00 00 00    	fsubs  0x4
			4e: R_386_32	.data
  52:	de c9                	fmulp  %st,%st(1)
  54:	d9 45 00             	flds   0x0(%ebp)
  57:	d9 45 04             	flds   0x4(%ebp)
  5a:	de e9                	fsubrp %st,%st(1)
  5c:	de c9                	fmulp  %st,%st(1)
  5e:	d9 fe                	fsin   
  60:	d9 46 08             	flds   0x8(%esi)
  63:	d9 46 0c             	flds   0xc(%esi)
  66:	d9 e1                	fabs   
  68:	de c9                	fmulp  %st,%st(1)
  6a:	d9 45 00             	flds   0x0(%ebp)
  6d:	d9 e8                	fld1   
  6f:	d9 46 0c             	flds   0xc(%esi)
  72:	d9 e1                	fabs   
  74:	de e9                	fsubrp %st,%st(1)
  76:	de c9                	fmulp  %st,%st(1)
  78:	de c1                	faddp  %st,%st(1)
  7a:	de c1                	faddp  %st,%st(1)
  7c:	d9 55 00             	fsts   0x0(%ebp)
  7f:	d9 46 0c             	flds   0xc(%esi)
  82:	d9 e1                	fabs   
  84:	d8 c0                	fadd   %st(0),%st
  86:	d9 e8                	fld1   
  88:	d8 e1                	fsub   %st(1),%st
  8a:	d8 4d 04             	fmuls  0x4(%ebp)
  8d:	d9 c9                	fxch   %st(1)
  8f:	d8 ca                	fmul   %st(2),%st
  91:	de c1                	faddp  %st,%st(1)
  93:	d9 55 04             	fsts   0x4(%ebp)
  96:	d9 c9                	fxch   %st(1)
  98:	dd d8                	fstp   %st(0)

0000009a <filter_end>:
  9a:	c3                   	ret    

0000009b <module_envelope>:
  9b:	d9 45 00             	flds   0x0(%ebp)
  9e:	8b 46 14             	mov    0x14(%esi),%eax
  a1:	85 c0                	test   %eax,%eax
  a3:	75 12                	jne    b7 <module_envelope.in_decay>
  a5:	d9 46 08             	flds   0x8(%esi)
  a8:	de c1                	faddp  %st,%st(1)
  aa:	d9 46 0c             	flds   0xc(%esi)
  ad:	df f1                	fcomip %st(1),%st
  af:	73 04                	jae    b5 <module_envelope.no_switch>
  b1:	40                   	inc    %eax
  b2:	89 46 14             	mov    %eax,0x14(%esi)

000000b5 <module_envelope.no_switch>:
  b5:	eb 05                	jmp    bc <module_envelope.no_decay>

000000b7 <module_envelope.in_decay>:
  b7:	d9 46 10             	flds   0x10(%esi)
  ba:	de c9                	fmulp  %st,%st(1)

000000bc <module_envelope.no_decay>:
  bc:	d9 55 00             	fsts   0x0(%ebp)

000000bf <envelope_end>:
  bf:	c3                   	ret    

000000c0 <module_delay>:
  c0:	d9 46 08             	flds   0x8(%esi)
  c3:	8b 5d 00             	mov    0x0(%ebp),%ebx
  c6:	83 c3 04             	add    $0x4,%ebx
  c9:	81 e3 ff ff 07 00    	and    $0x7ffff,%ebx
  cf:	89 5d 00             	mov    %ebx,0x0(%ebp)
  d2:	83 c3 04             	add    $0x4,%ebx
  d5:	d9 44 1d 00          	flds   0x0(%ebp,%ebx,1)
  d9:	d9 46 10             	flds   0x10(%esi)
  dc:	de c9                	fmulp  %st,%st(1)
  de:	de c1                	faddp  %st,%st(1)
  e0:	d9 54 1d 00          	fsts   0x0(%ebp,%ebx,1)

000000e4 <delay_end>:
  e4:	c3                   	ret    

000000e5 <synth>:
  e5:	60                   	pusha  
  e6:	89 c7                	mov    %eax,%edi
  e8:	89 d1                	mov    %edx,%ecx
  ea:	60                   	pusha  
  eb:	8d 3d 18 00 00 00    	lea    0x18,%edi
			ed: R_386_32	.bss
  f1:	b9 04 00 00 00       	mov    $0x4,%ecx

000000f6 <setup_loop>:
  f6:	51                   	push   %ecx
  f7:	8d 35 28 00 00 00    	lea    0x28,%esi
			f9: R_386_32	.data
  fd:	b9 08 01 00 00       	mov    $0x108,%ecx
 102:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
 104:	59                   	pop    %ecx
 105:	e2 ef                	loop   f6 <setup_loop>
 107:	61                   	popa   

00000108 <synth_loop>:
 108:	51                   	push   %ecx
 109:	d9 ee                	fldz   
 10b:	8d 35 18 00 00 00    	lea    0x18,%esi
			10d: R_386_32	.bss
 111:	8d 2d 38 04 00 00    	lea    0x438,%ebp
			113: R_386_32	.bss
 117:	b9 04 00 00 00       	mov    $0x4,%ecx

0000011c <tracks_loop>:
 11c:	51                   	push   %ecx
 11d:	8b 1d 10 00 00 00    	mov    0x10,%ebx
			11f: R_386_32	.bss
 123:	85 db                	test   %ebx,%ebx
 125:	0f 85 aa 00 00 00    	jne    1d5 <notick>
 12b:	8b 1d 00 00 00 00    	mov    0x0,%ebx
			12d: R_386_32	.bss
 131:	8a 9b 24 00 00 00    	mov    0x24(%ebx),%bl
			133: R_386_32	.data
 137:	6b db 60             	imul   $0x60,%ebx,%ebx
 13a:	a1 04 00 00 00       	mov    0x4,%eax
			13b: R_386_32	.bss
 13f:	01 c3                	add    %eax,%ebx
 141:	31 c0                	xor    %eax,%eax
 143:	8a 83 30 01 00 00    	mov    0x130(%ebx),%al
			145: R_386_32	.data
 149:	3c 00                	cmp    $0x0,%al
 14b:	74 6b                	je     1b8 <notrig>
 14d:	50                   	push   %eax
 14e:	24 7f                	and    $0x7f,%al
 150:	b3 0c                	mov    $0xc,%bl
 152:	f6 f3                	div    %bl
 154:	88 25 14 00 00 00    	mov    %ah,0x14
			156: R_386_32	.bss
 15a:	db 05 14 00 00 00    	fildl  0x14
			15c: R_386_32	.bss
 160:	db 05 20 00 00 00    	fildl  0x20
			162: R_386_32	.data
 166:	de f9                	fdivrp %st,%st(1)
 168:	d9 f0                	f2xm1  
 16a:	d9 e8                	fld1   
 16c:	de c1                	faddp  %st,%st(1)
 16e:	bb 01 00 00 00       	mov    $0x1,%ebx
 173:	88 c1                	mov    %al,%cl
 175:	d3 e3                	shl    %cl,%ebx
 177:	89 1d 14 00 00 00    	mov    %ebx,0x14
			179: R_386_32	.bss
 17d:	db 05 14 00 00 00    	fildl  0x14
			17f: R_386_32	.bss
 183:	de c9                	fmulp  %st,%st(1)
 185:	d9 05 1c 00 00 00    	flds   0x1c
			187: R_386_32	.data
 18b:	de c9                	fmulp  %st,%st(1)
 18d:	58                   	pop    %eax
 18e:	59                   	pop    %ecx
 18f:	51                   	push   %ecx
 190:	60                   	pusha  
 191:	f7 d9                	neg    %ecx
 193:	83 c1 04             	add    $0x4,%ecx
 196:	6b c9 08             	imul   $0x8,%ecx,%ecx
 199:	a8 80                	test   $0x80,%al
 19b:	74 03                	je     1a0 <no_alt_instr>
 19d:	83 c1 04             	add    $0x4,%ecx

000001a0 <no_alt_instr>:
 1a0:	81 c1 b0 02 00 00    	add    $0x2b0,%ecx
			1a2: R_386_32	.data
 1a6:	8b 09                	mov    (%ecx),%ecx
 1a8:	6b c9 18             	imul   $0x18,%ecx,%ecx
 1ab:	01 ce                	add    %ecx,%esi
 1ad:	d9 5e 10             	fstps  0x10(%esi)
 1b0:	c7 46 2c 00 00 00 00 	movl   $0x0,0x2c(%esi)
 1b7:	61                   	popa   

000001b8 <notrig>:
 1b8:	a1 04 00 00 00       	mov    0x4,%eax
			1b9: R_386_32	.bss
 1bd:	40                   	inc    %eax
 1be:	83 f8 60             	cmp    $0x60,%eax
 1c1:	75 0d                	jne    1d0 <no_advance>
 1c3:	a1 00 00 00 00       	mov    0x0,%eax
			1c4: R_386_32	.bss
 1c8:	40                   	inc    %eax
 1c9:	a3 00 00 00 00       	mov    %eax,0x0
			1ca: R_386_32	.bss
 1ce:	31 c0                	xor    %eax,%eax

000001d0 <no_advance>:
 1d0:	a3 04 00 00 00       	mov    %eax,0x4
			1d1: R_386_32	.bss

000001d5 <notick>:
 1d5:	b9 0b 00 00 00       	mov    $0xb,%ecx

000001da <element_loop>:
 1da:	51                   	push   %ecx
 1db:	8b 06                	mov    (%esi),%eax
 1dd:	55                   	push   %ebp
 1de:	f7 c7 04 00 00 00    	test   $0x4,%edi
 1e4:	d9 e8                	fld1   
 1e6:	74 12                	je     1fa <element_loop.ch_left>
 1e8:	a8 80                	test   $0x80,%al
 1ea:	74 08                	je     1f4 <element_loop.mono_only>
 1ec:	d9 05 18 00 00 00    	flds   0x18
			1ee: R_386_32	.data
 1f2:	de c9                	fmulp  %st,%st(1)

000001f4 <element_loop.mono_only>:
 1f4:	81 c5 00 00 0b 00    	add    $0xb0000,%ebp

000001fa <element_loop.ch_left>:
 1fa:	d9 1d 08 00 00 00    	fstps  0x8
			1fc: R_386_32	.bss
 200:	24 7f                	and    $0x7f,%al
 202:	3c 00                	cmp    $0x0,%al
 204:	75 05                	jne    20b <no_osc>
 206:	e8 f5 fd ff ff       	call   0 <module_oscillator>

0000020b <no_osc>:
 20b:	3c 01                	cmp    $0x1,%al
 20d:	75 05                	jne    214 <no_filter>
 20f:	e8 2c fe ff ff       	call   40 <module_filter>

00000214 <no_filter>:
 214:	3c 02                	cmp    $0x2,%al
 216:	75 05                	jne    21d <no_envelope>
 218:	e8 7e fe ff ff       	call   9b <module_envelope>

0000021d <no_envelope>:
 21d:	3c 04                	cmp    $0x4,%al
 21f:	75 05                	jne    226 <no_delay>
 221:	e8 9a fe ff ff       	call   c0 <module_delay>

00000226 <no_delay>:
 226:	8b 5e 04             	mov    0x4(%esi),%ebx
 229:	83 fb ff             	cmp    $0xffffffff,%ebx
 22c:	75 04                	jne    232 <not_master_out>
 22e:	de c1                	faddp  %st,%st(1)
 230:	eb 19                	jmp    24b <was_master_out>

00000232 <not_master_out>:
 232:	01 f3                	add    %esi,%ebx
 234:	80 fc 00             	cmp    $0x0,%ah
 237:	74 10                	je     249 <no_op>
 239:	d9 03                	flds   (%ebx)
 23b:	80 fc 02             	cmp    $0x2,%ah
 23e:	75 02                	jne    242 <no_op_mult>
 240:	de c9                	fmulp  %st,%st(1)

00000242 <no_op_mult>:
 242:	80 fc 01             	cmp    $0x1,%ah
 245:	75 02                	jne    249 <no_op>

00000247 <op_add>:
 247:	de c1                	faddp  %st,%st(1)

00000249 <no_op>:
 249:	d9 1b                	fstps  (%ebx)

0000024b <was_master_out>:
 24b:	83 c6 18             	add    $0x18,%esi
 24e:	5d                   	pop    %ebp
 24f:	81 c5 00 00 16 00    	add    $0x160000,%ebp
 255:	59                   	pop    %ecx
 256:	49                   	dec    %ecx
 257:	75 81                	jne    1da <element_loop>
 259:	59                   	pop    %ecx
 25a:	49                   	dec    %ecx
 25b:	0f 85 bb fe ff ff    	jne    11c <tracks_loop>
 261:	8b 35 10 00 00 00    	mov    0x10,%esi
			263: R_386_32	.bss
 267:	4e                   	dec    %esi
 268:	79 05                	jns    26f <was_master_out.no_newtick>
 26a:	be 30 75 00 00       	mov    $0x7530,%esi

0000026f <was_master_out.no_newtick>:
 26f:	89 35 10 00 00 00    	mov    %esi,0x10
			271: R_386_32	.bss
 275:	d9 1f                	fstps  (%edi)
 277:	83 c7 04             	add    $0x4,%edi
 27a:	59                   	pop    %ecx
 27b:	49                   	dec    %ecx
 27c:	0f 85 86 fe ff ff    	jne    108 <synth_loop>
 282:	61                   	popa   
 283:	c3                   	ret    
